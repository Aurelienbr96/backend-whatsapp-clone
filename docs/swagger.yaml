definitions:
  entity.User:
    properties:
      avatar:
        type: string
      id:
        type: string
      isVerified:
        type: boolean
      phoneNumber:
        type: string
      userName:
        type: string
    type: object
  http.ContactsToSync:
    properties:
      ownerId:
        type: string
      phoneNumbers:
        items:
          type: string
        type: array
    required:
    - ownerId
    - phoneNumbers
    type: object
  http.LoginDTO:
    properties:
      code:
        type: string
      phoneNumber:
        type: string
    required:
    - code
    - phoneNumber
    type: object
  http.SendCodeDTO:
    properties:
      phoneNumber:
        type: string
    required:
    - phoneNumber
    type: object
  http.UserToCreate:
    properties:
      phoneNumber:
        type: string
    required:
    - phoneNumber
    type: object
  http.UserToUpdate:
    properties:
      phoneNumber:
        type: string
      userName:
        type: string
    required:
    - phoneNumber
    - userName
    type: object
  model.Conversation:
    properties:
      deleted_by:
        items:
          type: string
        type: array
      id:
        type: string
      last_msg:
        $ref: '#/definitions/model.Message'
      user_id:
        items:
          type: string
        type: array
    type: object
  model.Message:
    properties:
      content:
        type: string
      conversationId:
        type: string
      deleted_by:
        items:
          type: string
        type: array
      id:
        type: string
      read:
        type: boolean
      senderId:
        type: string
      sentAt:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: Login data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/http.LoginDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
      summary: Login User
      tags:
      - example
  /auth/logout:
    post:
      consumes:
      - application/json
      description: Logout a user
      produces:
      - application/json
      responses:
        "201":
          description: You are logged out
          schema:
            type: string
      summary: Logout User
      tags:
      - example
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh Access token
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/entity.User'
      summary: Refresh Access token
      tags:
      - example
  /auth/send-code:
    post:
      consumes:
      - application/json
      description: Send an OTP by sms
      parameters:
      - description: Send code body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/http.SendCodeDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Code sent
          schema:
            type: string
      summary: Send a code to a User
      tags:
      - example
  /contact/{userId}:
    get:
      consumes:
      - application/json
      description: Get a user contacts by ID
      parameters:
      - description: User ID
        example: '"123e4567-e89b-12d3-a456-426614174000"'
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User's contacts
      tags:
      - example
  /conversations:
    get:
      consumes:
      - application/json
      description: Get list of conversations
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Conversation'
      summary: Get list of conversations
      tags:
      - example
  /message/{conversationId}:
    get:
      consumes:
      - application/json
      description: Get conversation message
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Message'
            type: array
      summary: Get conversation message
      tags:
      - example
  /user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/http.UserToCreate'
      produces:
      - application/json
      responses:
        "201":
          description: User successfully created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create User
      tags:
      - example
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user
      parameters:
      - description: User ID
        example: '"123e4567-e89b-12d3-a456-426614174000"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User successfully deleted
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Could not find this user
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete User
      tags:
      - example
    get:
      consumes:
      - application/json
      description: Get a user by ID
      parameters:
      - description: User ID
        example: '"123e4567-e89b-12d3-a456-426614174000"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User
      tags:
      - example
    put:
      consumes:
      - application/json
      description: Update a new user
      parameters:
      - description: User Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/http.UserToUpdate'
      - description: User ID
        example: '"123e4567-e89b-12d3-a456-426614174000"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: User successfully updated
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update User
      tags:
      - example
  /user/by-phone/{phoneNumber}:
    get:
      consumes:
      - application/json
      description: Get a user by PhoneNumber
      parameters:
      - description: User ID
        example: '"+33602222632"'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User
      tags:
      - example
  /user/me:
    get:
      consumes:
      - application/json
      description: Get user's connected information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get User
      tags:
      - example
  /user/sync-contacts:
    post:
      consumes:
      - application/json
      description: Sync contact
      parameters:
      - description: Contact Data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/http.ContactsToSync'
      produces:
      - application/json
      responses:
        "201":
          description: contacts successfully synced
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Sync contact
      tags:
      - example
swagger: "2.0"
